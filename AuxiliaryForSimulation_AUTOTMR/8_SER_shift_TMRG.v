/****************************************************************************************************
 *                          ! THIS FILE WAS AUTO-GENERATED BY TMRG TOOL !                           *
 *                                   ! DO NOT EDIT IT MANUALLY !                                    *
 *                                                                                                  *
 * file    : ./7_4_ser_sr_v1TMR.v                                                                   *
 *                                                                                                  *
 * user    : cometti                                                                                *
 * host    : elt78xl.to.infn.it                                                                     *
 * date    : 11/11/2018 12:32:40                                                                    *
 *                                                                                                  *
 * workdir : /export/elt54xl/disk0/users/cometti/project/2-Synthesis/netlist_in/Ottobre_2018/TMR_files *
 * cmd     : /export/elt54xl/disk0/users/cometti/project/2-Synthesis/netlist_in/aa_DTU_ECAL_1ch_final/t *
 *           mrg/bin/tmrg -v 7_4_ser_sr_v1.v 7_TOPser_sr_v1.v                                       *
 * tmrg rev: 9a6ee4d64fce05b58c62ee9ecfc4ef5a8551d404                                               *
 *                                                                                                  *
 * src file: 7_4_ser_sr_v1.v                                                                        *
 *           File is NOT under version control!                                                     *
 *           Modification time : 2018-11-11 12:20:13.520097                                         *
 *           File Size         : 644                                                                *
 *           MD5 hash          : 8d2ca27c0bc9402a3ca8753e9553fec2                                   *
 *                                                                                                  *
 ****************************************************************************************************/

`timescale  1ps/1ps
module Serializer_shiftTMR(
  CLK_SRL,
  RST_A,
  RST_B,
  RST_C,
  DATA_IN_A,
  DATA_IN_B,
  DATA_IN_C,
  START_SER_A,
  START_SER_B,
  START_SER_C,
  BIT_OUT,
  tmrError
);
parameter    Nbits_31=31;
parameter    IDLE_pattern=32'b11101010101010101010101010101010;

output tmrError;
wire tmrError;
wor bitShiftRegTmrError;
wire [Nbits_31:0] bitShiftReg;
input CLK_SRL;
input RST_A;
input RST_B;
input RST_C;
input [Nbits_31:0] DATA_IN_A;
input [Nbits_31:0] DATA_IN_B;
input [Nbits_31:0] DATA_IN_C;
input START_SER_A;
input START_SER_B;
input START_SER_C;
output BIT_OUT;
reg  [Nbits_31:0] bitShiftReg_A;
reg  [Nbits_31:0] bitShiftReg_B;
reg  [Nbits_31:0] bitShiftReg_C;

always @( posedge CLK_SRL )
  begin
    if (RST_A==1'b0|START_SER_A==1'b1)
      bitShiftReg_A <= DATA_IN_A;
    else
      bitShiftReg_A <= {bitShiftReg_A[30:0], bitShiftReg_A[31]};
  end

always @( posedge CLK_SRL )
  begin
    if (RST_B==1'b0|START_SER_B==1'b1)
      bitShiftReg_B <= DATA_IN_B;
    else
      bitShiftReg_B <= {bitShiftReg_B[30:0], bitShiftReg_B[31]};
  end

always @( posedge CLK_SRL )
  begin
    if (RST_C==1'b0|START_SER_C==1'b1)
      bitShiftReg_C <= DATA_IN_C;
    else
      bitShiftReg_C <= {bitShiftReg_C[30:0], bitShiftReg_C[31]};
  end
assign BIT_OUT =  bitShiftReg[Nbits_31] ;

majVoter #(.WIDTH(((Nbits_31)>(0)) ? ((Nbits_31)-(0)+1) : ((0)-(Nbits_31)+1))) bitShiftRegVoter (
    .inA(bitShiftReg_A),
    .inB(bitShiftReg_B),
    .inC(bitShiftReg_C),
    .out(bitShiftReg),
    .tmrErr(bitShiftRegTmrError)
    );
assign tmrError =  bitShiftRegTmrError;


endmodule

// /export/elt54xl/disk0/users/cometti/project/2-Synthesis/netlist_in/aa_DTU_ECAL_1ch_final/tmrg/src/../common/voter.v
module majVoter (inA, inB, inC, out, tmrErr);
  parameter WIDTH = 1;
  input   [(WIDTH-1):0]   inA, inB, inC;
  output  [(WIDTH-1):0]   out;
  output                  tmrErr;
  reg                     tmrErr;
  assign out = (inA&inB) | (inA&inC) | (inB&inC);
  always @(inA or inB or inC)
  begin
    if (inA!=inB || inA!=inC || inB!=inC)
      tmrErr = 1'b1;
    else
      tmrErr = 1'b0;
  end
endmodule


// /export/elt54xl/disk0/users/cometti/project/2-Synthesis/netlist_in/aa_DTU_ECAL_1ch_final/tmrg/src/../common/fanout.v
module fan_out (in, outA, outB, outC);
  parameter WIDTH = 1;
  input   [(WIDTH-1):0]   in;
  output  [(WIDTH-1):0]   outA,outB,outC;
  assign outA=in;
  assign outB=in;
  assign outC=in;
endmodule
